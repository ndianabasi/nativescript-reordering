diff --git a/node_modules/@nativescript-community/ui-popover/index.ios.js b/node_modules/@nativescript-community/ui-popover/index.ios.js
index 5f913ab..6665a07 100644
--- a/node_modules/@nativescript-community/ui-popover/index.ios.js
+++ b/node_modules/@nativescript-community/ui-popover/index.ios.js
@@ -21,6 +21,10 @@ var UIPopoverPresentationControllerDelegateImpl = /** @class */ (function (_supe
     };
     UIPopoverPresentationControllerDelegateImpl.prototype.popoverPresentationControllerShouldDismissPopover = function (popoverPresentationController) {
         var _a;
+        if (this._options.onTapOutside) {
+            this._options.onTapOutside();
+        }
+        
         return !((_a = this._options) === null || _a === void 0 ? void 0 : _a.outsideTouchable);
     };
     UIPopoverPresentationControllerDelegateImpl.ObjCProtocols = [UIPopoverPresentationControllerDelegate];
@@ -85,7 +89,7 @@ function createUIViewAutoSizeUIViewAutoSize(view) {
     view.nativeViewProtected.autoresizingMask = 2 /* UIViewAutoresizing.FlexibleWidth */ | 16 /* UIViewAutoresizing.FlexibleHeight */;
     return self;
 }
-export function showPopover(view, { anchor, vertPos = VerticalPosition.BELOW, horizPos = HorizontalPosition.CENTER, x = 0, y = 0, fitInScreen = true, transparent = false, onDismiss, outsideTouchable = false, backgroundColor, canOverlapSourceViewRect = false, context = {}, hideArrow = false }) {
+export function showPopover(view, { anchor, vertPos = VerticalPosition.BELOW, horizPos = HorizontalPosition.CENTER, x = 0, y = 0, fitInScreen = true, transparent = false, onDismiss, onTapOutside, outsideTouchable = false, backgroundColor, canOverlapSourceViewRect = false, context = {}, hideArrow = false }) {
     _commonShowNativePopover(view);
     const parentWithController = IOSHelper.getParentWithViewController(anchor);
     if (!parentWithController) {
@@ -118,7 +122,8 @@ export function showPopover(view, { anchor, vertPos = VerticalPosition.BELOW, ho
     if (!controller.popoverPresentationController.delegate) {
         controller.popoverPresentationController.delegate = UIPopoverPresentationControllerDelegateImpl.initWithOptions({
             outsideTouchable,
-            onDismiss: _onDismiss
+            onDismiss: _onDismiss,
+            onTapOutside: onTapOutside
         });
     }
     if (hideArrow) {
